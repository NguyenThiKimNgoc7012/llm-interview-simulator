import os
from utils import extract_job_title_from_cv, load_questions_from_json, auto_select_model
from interview_simulation import InterviewSimulation
from tkinter import Tk
from tkinter.filedialog import askopenfilename
from utils import print_available_job_titles


def run_with_cv():
    print(" ƒêang m·ªü c·ª≠a s·ªï ƒë·ªÉ ch·ªçn file CV...")
    Tk().withdraw()  
    path = askopenfilename(
        title="Ch·ªçn file CV (.pdf)",
        filetypes=[("PDF files", "*.pdf")]
    )
    
    if not path:
        print(" B·∫°n ch∆∞a ch·ªçn file n√†o. Tho√°t ch∆∞∆°ng tr√¨nh.")
        return

    job_title = extract_job_title_from_cv(path)
    print(f"Ng√†nh/ph√≤ng ban tr√≠ch xu·∫•t t·ª´ CV: {job_title}")
    run_interview(job_title)

def run_manual():
    job_title = input("Nh·∫≠p ng√†nh/ph√≤ng ban: ")
    run_interview(job_title)

def run_interview(job_title):
    questions = load_questions_from_json(job_title=job_title)
    
    if not questions:
        print(f"\nKh√¥ng t√¨m th·∫•y c√¢u h·ªèi n√†o cho ng√†nh '{job_title}'.")
        print("H√£y ki·ªÉm tra l·∫°i ng√†nh b·∫°n nh·∫≠p ho·∫∑c ƒë·∫£m b·∫£o CV ghi r√µ ng√†nh c√≥ trong h·ªá th·ªëng.")
        print("G·ª£i √Ω: C√°c ng√†nh c√≥ trong c∆° s·ªü d·ªØ li·ªáu bao g·ªìm:")
        print_available_job_titles()  
        return

    selected_model = auto_select_model()
    print(f"\n‚û°Ô∏è B·∫Øt ƒë·∫ßu phi√™n ph·ªèng v·∫•n: {job_title} v·ªõi model `{selected_model}`")

    sim = InterviewSimulation(job_title, questions, model_name=selected_model)
    sim.conduct_manual_interview()


def main():
    print("\nüîç B·∫°n mu·ªën kh·ªüi ƒë·ªông theo c√°ch n√†o?")
    print("1. T·∫£i l√™n CV (.pdf) ƒë·ªÉ t·ª± ƒë·ªông tr√≠ch xu·∫•t ng√†nh ngh·ªÅ")
    print("2. Nh·∫≠p ng√†nh/ph√≤ng ban th·ªß c√¥ng")
    choice = input("Ch·ªçn (1 ho·∫∑c 2): ")

    if choice == "1":
        run_with_cv()
    else:
        run_manual()
if __name__ == "__main__":
    main()
